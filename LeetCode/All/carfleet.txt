class Solution:
    def carFleet(self, target: int, position: List[int], speed: List[int]) -> int:
        """
        n : number of cars

        position : integer array length n
            - represents the starting mile of the ith car

        speed : integer array length n
            - represents the speed of the ith car

        constraint: speed of car fleet is min speed of any car

        """
        pair = [[p,s] for p, s in zip(position, speed)]
        stack = []
        for p, s in sorted(pair)[::-1]:
            stack.append((target - p) / s)
            if len(stack) >= 2 and stack[-1] <= stack[-2]:
                stack.pop()  
        return len(stack)